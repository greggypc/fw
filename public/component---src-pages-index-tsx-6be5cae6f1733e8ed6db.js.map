{"version":3,"sources":["webpack:///./src/components/grid-item.tsx","webpack:///./src/pages/index.tsx"],"names":["GridItem","styled","Link","withConfig","displayName","componentId","props","theme","fontSizes","space","breakpoints","Area","animated","div","Index","_ref","projects","data","pageAnimation","useSpring","config","slow","from","opacity","to","React","createElement","Layout","color","SEO","title","style","nodes","map","project","id","key","slug","aria-label","Img","fluid","cover","childImageSharp","title_detail"],"mappings":"2FAAA,4BAGMA,EAAWC,YAAOC,QAAKC,WAAA,CAAAC,YAAA,sBAAAC,YAAA,gBAAZJ,CAAY,8UAsBZ,SAAAK,GAAK,OAAIA,EAAMC,MAAMC,UAAU,MACjC,SAAAF,GAAK,OAAIA,EAAMC,MAAME,MAAM,MAGjB,SAAAH,GAAK,OAAIA,EAAMC,MAAMG,YAAY,MACvC,SAAAJ,GAAK,OAAIA,EAAMC,MAAMC,UAAU,MACjC,SAAAF,GAAK,OAAIA,EAAMC,MAAME,MAAM,MAU7BT,O,kCCzCf,iHAsBMW,EAAOV,YAAOW,IAASC,KAAIV,WAAA,CAAAC,YAAA,cAAAC,YAAA,eAApBJ,CAAoB,yNAMV,SAAAK,GAAK,OAAIA,EAAMC,MAAMG,YAAY,MAKjC,SAAAJ,GAAK,OAAIA,EAAMC,MAAMG,YAAY,MA4BzCI,UAtBmC,SAAHC,GAA+B,IAAjBC,EAAQD,EAAhBE,KAAQD,SACrDE,EAAgBC,YAAU,CAC9BC,OAAQA,IAAOC,KACfC,KAAM,CAAEC,QAAS,GACjBC,GAAI,CAAED,QAAS,KAGjB,OACEE,IAAAC,cAACC,IAAM,CAACC,MAAM,WACZH,IAAAC,cAACG,IAAG,CAACC,MAAM,sCACXL,IAAAC,cAACf,EAAI,CAACoB,MAAOb,GACVF,EAASgB,MAAMC,KAAI,SAAAC,GAAO,OACzBT,IAAAC,cAAC1B,IAAQ,CAACmC,GAAG,aAAaC,IAAKF,EAAQG,KAAMb,GAAIU,EAAQG,KAAMC,aAAA,iBAA6BJ,EAAQJ,MAAK,KACvGL,IAAAC,cAACa,IAAG,CAACC,MAAON,EAAQO,MAAMC,gBAAgBF,QAC1Cf,IAAAC,cAAA,YAAOQ,EAAQS","file":"component---src-pages-index-tsx-6be5cae6f1733e8ed6db.js","sourcesContent":["import styled from 'styled-components'\r\nimport { Link } from 'gatsby'\r\n\r\nconst GridItem = styled(Link)`\r\n  position: relative;\r\n  > div {\r\n    position: absolute !important;\r\n    top: 0px;\r\n    right: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n  }\r\n  > div img {\r\n    /* transition: all 0.3s ease 0s !important; */\r\n  }\r\n\r\n    /* Project name across project images */\r\n  > span {\r\n    z-index: 10;\r\n    color: white;\r\n    position: absolute;\r\n    left: 0;\r\n    right: 0;\r\n    text-align: right;\r\n    font-weight: 500;\r\n    font-size: ${props => props.theme.fontSizes[2]};\r\n    padding: ${props => props.theme.space[4]};\r\n    text-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\r\n\r\n    @media (max-width: ${props => props.theme.breakpoints[1]}) {\r\n      font-size: ${props => props.theme.fontSizes[1]};\r\n      padding: ${props => props.theme.space[3]};\r\n    }\r\n  }\r\n  &:hover {\r\n    > div img {\r\n      /* transform: scale(1.1); */\r\n    }\r\n  }\r\n`\r\n\r\nexport default GridItem\r\n","import React from 'react'\nimport { graphql } from 'gatsby'\nimport Img from 'gatsby-image'\nimport styled from 'styled-components'\nimport { config, animated, useSpring } from 'react-spring'\nimport Layout from '../components/layout'\nimport GridItem from '../components/grid-item'\nimport SEO from '../components/SEO'\nimport { ChildImageSharp } from '../types'\n\ntype PageProps = {\n  data: {\n    projects: {\n      nodes: {\n        title: string\n        slug: string\n        cover: ChildImageSharp\n      }[]\n    }\n  }\n}\n\nconst Area = styled(animated.div)`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n  grid-auto-rows: 50vw;\n\n  /* 1200px - 2 projects per row */\n  @media (max-width: ${props => props.theme.breakpoints[3]}) {\n    grid-template-columns: 1fr 1fr;\n    grid-auto-rows: 60vw;\n  }\n  /* 1000px - 1 project per row */\n  @media (max-width: ${props => props.theme.breakpoints[2]}) {\n    grid-template-columns: 1fr;\n    grid-auto-rows: 60vw;\n  }\n`\n\nconst Index: React.FunctionComponent<PageProps> = ({ data: { projects } }) => {\n  const pageAnimation = useSpring({\n    config: config.slow,\n    from: { opacity: 0 },\n    to: { opacity: 1 },\n  })\n\n  return (\n    <Layout color=\"#F5F5F5\">\n      <SEO title=\"Home | Faye + Walker Architecture\" />\n      <Area style={pageAnimation}>\n        {projects.nodes.map(project => (\n          <GridItem id=\"img-border\" key={project.slug} to={project.slug} aria-label={`View project \"${project.title}\"`}>\n            <Img fluid={project.cover.childImageSharp.fluid} />\n            <span>{project.title_detail}</span>\n          </GridItem>\n        ))}\n      </Area>\n    </Layout>\n  )\n}\n\nexport default Index\n\nexport const query = graphql`\n  query Index {\n    projects: allProjectsYaml {\n      nodes {\n        title\n        title_detail\n        slug\n        cover {\n          childImageSharp {\n            fluid(quality: 85, maxWidth: 1200) {\n              ...GatsbyImageSharpFluid_withWebp\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}